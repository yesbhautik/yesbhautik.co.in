/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// Generated by unplugin-vue-router. ‼️ DO NOT MODIFY THIS FILE ‼️
// It's recommended to commit this file.
// Make sure to add this file to your tsconfig.json file as an "includes" or "files" entry.

declare module 'vue-router/auto-routes' {
  import type {
    RouteRecordInfo,
    ParamValue,
    ParamValueOneOrMore,
    ParamValueZeroOrMore,
    ParamValueZeroOrOne,
  } from 'vue-router'

  /**
   * Route name map generated by unplugin-vue-router
   */
  export interface RouteNamedMap {
    '/': RouteRecordInfo<'/', '/', Record<never, never>, Record<never, never>>,
    '/[...404]': RouteRecordInfo<'/[...404]', '/:404(.*)', { 404: ParamValue<true> }, { 404: ParamValue<false> }>,
    '/bookmarks': RouteRecordInfo<'/bookmarks', '/bookmarks', Record<never, never>, Record<never, never>>,
    '/chat': RouteRecordInfo<'/chat', '/chat', Record<never, never>, Record<never, never>>,
    '/demos': RouteRecordInfo<'/demos', '/demos', Record<never, never>, Record<never, never>>,
    '/giving-talks': RouteRecordInfo<'/giving-talks', '/giving-talks', Record<never, never>, Record<never, never>>,
    '/hold-collective-sponsor-onetime': RouteRecordInfo<'/hold-collective-sponsor-onetime', '/hold-collective-sponsor-onetime', Record<never, never>, Record<never, never>>,
    '/media': RouteRecordInfo<'/media', '/media', Record<never, never>, Record<never, never>>,
    '/notes': RouteRecordInfo<'/notes', '/notes', Record<never, never>, Record<never, never>>,
    '/photos': RouteRecordInfo<'/photos', '/photos', Record<never, never>, Record<never, never>>,
    '/podcasts': RouteRecordInfo<'/podcasts', '/podcasts', Record<never, never>, Record<never, never>>,
    '/posts/': RouteRecordInfo<'/posts/', '/posts', Record<never, never>, Record<never, never>>,
    '/posts/coming-soon': RouteRecordInfo<'/posts/coming-soon', '/posts/coming-soon', Record<never, never>, Record<never, never>>,
    '/posts/note': RouteRecordInfo<'/posts/note', '/posts/note', Record<never, never>, Record<never, never>>,
    '/projects': RouteRecordInfo<'/projects', '/projects', Record<never, never>, Record<never, never>>,
    '/sponsors-list': RouteRecordInfo<'/sponsors-list', '/sponsors-list', Record<never, never>, Record<never, never>>,
    '/streams': RouteRecordInfo<'/streams', '/streams', Record<never, never>, Record<never, never>>,
    '/talks': RouteRecordInfo<'/talks', '/talks', Record<never, never>, Record<never, never>>,
    '/uses': RouteRecordInfo<'/uses', '/uses', Record<never, never>, Record<never, never>>,
  }

  /**
   * Route file to route info map by unplugin-vue-router.
   * Used by the volar plugin to automatically type useRoute()
   *
   * Each key is a file path relative to the project root with 2 properties:
   * - routes: union of route names of the possible routes when in this page (passed to useRoute<...>())
   * - views: names of nested views (can be passed to <RouterView name="...">)
   *
   * @internal
   */
  export interface _RouteFileInfoMap {
    'pages/index.md': {
      routes: '/'
      views: never
    }
    'pages/[...404].md': {
      routes: '/[...404]'
      views: never
    }
    'pages/bookmarks.md': {
      routes: '/bookmarks'
      views: never
    }
    'pages/chat.md': {
      routes: '/chat'
      views: never
    }
    'pages/demos.md': {
      routes: '/demos'
      views: never
    }
    'pages/giving-talks.md': {
      routes: '/giving-talks'
      views: never
    }
    'pages/hold-collective-sponsor-onetime.md': {
      routes: '/hold-collective-sponsor-onetime'
      views: never
    }
    'pages/media.md': {
      routes: '/media'
      views: never
    }
    'pages/notes.md': {
      routes: '/notes'
      views: never
    }
    'pages/photos.md': {
      routes: '/photos'
      views: never
    }
    'pages/podcasts.md': {
      routes: '/podcasts'
      views: never
    }
    'pages/posts/index.md': {
      routes: '/posts/'
      views: never
    }
    'pages/posts/coming-soon.md': {
      routes: '/posts/coming-soon'
      views: never
    }
    'pages/posts/note.md': {
      routes: '/posts/note'
      views: never
    }
    'pages/projects.md': {
      routes: '/projects'
      views: never
    }
    'pages/sponsors-list.md': {
      routes: '/sponsors-list'
      views: never
    }
    'pages/streams.md': {
      routes: '/streams'
      views: never
    }
    'pages/talks.md': {
      routes: '/talks'
      views: never
    }
    'pages/uses.md': {
      routes: '/uses'
      views: never
    }
  }

  /**
   * Get a union of possible route names in a certain route component file.
   * Used by the volar plugin to automatically type useRoute()
   *
   * @internal
   */
  export type _RouteNamesForFilePath<FilePath extends string> =
    _RouteFileInfoMap extends Record<FilePath, infer Info>
      ? Info['routes']
      : keyof RouteNamedMap
}
